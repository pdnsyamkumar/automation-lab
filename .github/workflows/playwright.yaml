name: "Playwright Tests"
on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Browser to run tests in"
        required: true
        default: "chromium"
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - chrome
          - edge
          - safari
      shards:
        description: "Number of shards to run"
        required: true
        default: "1"

env:
  BASE_URL: "https://automationexercise.com"

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node, npm and cache
        uses: './.github/actions/setup-npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Set environment variables
        run: |
          {
            echo "BROWSER=${{ github.event.inputs.browser }}"
            echo "SHARDS=${{ github.event.inputs.shards }}"
          } >> $GITHUB_ENV

      - name: Create test matrix
        id: create-matrix
        run: |
          echo "Creating matrix..."
          shards=${{ github.event.inputs.shards }}
          if [ -z "$shards" ]; then
            shards=1
          fi
          shardArray=$(seq -s, 1 $shards | sed 's/,/","/g')
          matrix=$(echo "{\"shard\": [\"$shardArray\"], \"total_shards\": [\"$shards\"]}")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

      - name: Install Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/install-browser
        with:
          browser: ${{ github.event.inputs.browser }}

  run-tests:
    needs: setup-environment
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup-environment.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node, npm and cache
        uses: './.github/actions/setup-npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/install-browser
        with:
          browser: ${{ github.event.inputs.browser }}

      - name: Run Playwright tests
        run: |
          npx playwright test \
            --config=playwright/playwright.config.ts \
            --shard=${{ matrix.shard }}/${{ matrix.total_shards }} \
            --project=tests
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 7